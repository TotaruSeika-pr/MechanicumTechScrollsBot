from telebot import types
from keyboa import Keyboa

class KeyBoardManager:
        """–ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–Ω—ë—Å –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å"""
        
        reload_keyboard_button = types.KeyboardButton(text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É')
        
        request_button = types.KeyboardButton(text='üì© –°–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å')
        catalog_button = types.KeyboardButton(text='üìÇ –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥')
        search_category_button = types.KeyboardButton(text='üîé –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')

        suggest_idea_button = types.KeyboardButton(text='üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é')
        show_ideas_button = types.KeyboardButton(text='üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∏–¥–µ–∏')

        sending_settings_button = types.KeyboardButton(text='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏')

        admin_section_button = types.KeyboardButton(text='üõ†Ô∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è')

        create_new_instruction_button = types.KeyboardButton(text='üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é')
        edit_instructions_button = types.KeyboardButton(text='‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é')
        
        remove_instructions_button = types.KeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é')

        market_button = types.KeyboardButton(text='üè™ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω') 
        open_storage_button = types.KeyboardButton(text='üì¶ –û—Ç–∫—Ä—ã—Ç—å —Å–∫–ª–∞–¥')

        add_prefix_button = types.KeyboardButton(text='üÜï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å üîù')
        remove_prefix_button = types.KeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å üîù')

        add_cap_button = types.KeyboardButton(text='üÜï –î–æ–±–∞–≤–∏—Ç—å —à–∞–ø–∫—É üß¢')
        remove_cap_button = types.KeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å —à–∞–ø–∫—É üß¢')

        add_mechanicum_button = types.KeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É–º–∞') 
        edit_mechanicum_button = types.KeyboardButton(text='‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É–º–∞')
        remove_mechanicum_button = types.KeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É–º–∞')

        send_admin_button = types.KeyboardButton(text='üì§ –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—ã–ª–∫—É')

        edit_data_admin_button = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞')
        deactivate_administration_mode_button = types.KeyboardButton(text='üö´ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è')

        def GetKeyboardInstruction(id_instruction):
        
            menu = []
            
            set_comment_inline_button = types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π', callback_data=f'set_comment {id_instruction}')
            get_comment_inline_button = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏', callback_data=f'get_comment {id_instruction}')

            menu.append(set_comment_inline_button)
            menu.append(get_comment_inline_button)
            
            answer = Keyboa(items=menu)
            return answer
        

        def CreatingListIstructions(data, tag):
            menu = []
            for i in data:
                menu.append({f'{i[4]}': f'{tag} {i[0]}'})

            answer = Keyboa(items=menu)
            return answer
        
        def CreatingListSections(data):
            menu = []
            for i in data:
               menu.append({i: f'section {i}'})

            answer = Keyboa(items=menu)
            return answer
        
        def CreateMarketCategory(call):
            
            prefix_market_inline_button = types.InlineKeyboardButton(text='üîù –ü—Ä–µ—Ñ–∏–∫—Å—ã',
                                                                     callback_data=f'prefix_{call}')
            cap_market_inline_button = types.InlineKeyboardButton(text='üß¢ –®–∞–ø–∫–∏',
                                                                  callback_data=f'cap_{call}')

            menu = [prefix_market_inline_button,
                    cap_market_inline_button]
            
            answer = Keyboa(items=menu)

            return answer
        
        def GetItemsKeyboard(data, call):
            menu = []
            for i in data:
                menu.append({f'{i[1]} - {i[2]} üéñÔ∏è': f'{call}_buy {i[0]}'})
            answer = Keyboa(items=menu)
            return answer
        
        def GetItemsKeyboardFromStotage(data, call):
            menu = []
            for i in data:
                menu.append({f'{i}': f'set_{call} {i}'})
            answer = Keyboa(items=menu)
            return answer
        
        def GetKeyboardForConfirmationIdea(id_idea):

            accept_idea_button = types.InlineKeyboardButton(text='‚úÖ', callback_data=f'idea_accept {id_idea}')
            reject_idea_button = types.InlineKeyboardButton(text='‚ùå', callback_data=f'idea_reject {id_idea}')

            menu = [accept_idea_button, reject_idea_button]
            answer = Keyboa(items=menu, items_in_row=2)
            return answer
        
        def GetSendingSettingsKeyboard():

            personal_sending_button = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞—è–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='personal_sending')
            admin_sending_button = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏', callback_data='admin_sending')

            menu = [personal_sending_button, admin_sending_button]

            answer = Keyboa(items=menu)
            return answer
        
        def GetAllIdesKeyboard(data):
            text_edit = {
                '0': '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
                '1': '–≥–æ–ª–æ—Å–∞–Ω–∏–µ',
                '2': '–ø—Ä–∏–Ω—è—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ',
                '3': '–≤—ã–ø—É—â–µ–Ω'
            }
            menu = []
            for i in data:
                menu.append({f'{i[2]} - {text_edit[i[5]]} | {i[6]}': f'show_idea {i[0]}'})
            answer = Keyboa(items=menu)
            return answer
        
        def GetIdeaKeyboard(idea, user_editor, user_admin):
            menu = []
            menu.append(types.InlineKeyboardButton(text='–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å', callback_data=f'vote {idea[0]}'))
            if user_editor:
                if idea[5] == '1':
                    menu.append(types.InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ', callback_data=f'to_create {idea[0]}'))
                elif idea[5] == '2':
                    menu.append(types.InlineKeyboardButton(text='–í—ã–ø—É—Å—Ç–∏—Ç—å', callback_data=f'release {idea[0]}'))
            if user_admin:
                if idea[5] == '0':
                    menu.append(types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'idea_accept {idea[0]}'))
                menu.append(types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'remove_idea {idea[0]}'))

            answer = Keyboa(items=menu)
            return answer